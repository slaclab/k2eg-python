version: '3.8'

#volumes:
#  redis-data:
#    null
services:
  k2eg-python:
    build: 
      context: .
      dockerfile: Dockerfile
    working_dir: /opt/app
    command: 
        - /bin/bash
        - -c
        - |
          wait
          python tools/init-test-topics.py
          sleep 30
          pytest -o log_cli=true
    environment:
      K2EG_PYTHON_ENABLE_KAFKA_DEBUG_LOG: true
      WAIT_HOSTS: kafka:9092

  epics_pva:
    image: ghcr.io/bisegni/epics-base-docker-image:main
    volumes:
      - ./tests/epics-test.db:/db/softioc.db

  k2eg:
    image: ghcr.io/slaclab/k2eg/ubuntu:latest
    pull_policy: always
    command: 
        - /bin/bash
        - -c
        - |
          sleep 10
          k2eg --log-level=debug --cmd-input-topic=cmd-in-topic --sub-server-address=kafka:9092  --sub-group-id=eed-k2eg --pub-server-address=kafka:9092 --metric-enable=true
    depends_on: 
      - kafka
  
  zookeeper:
    image: bitnami/zookeeper:3.8.1
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: bitnami/kafka:3.5.0
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ENABLE_KRAFT=no
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT