version: '3.8'

#volumes:
#  redis-data:
#    null
services:
  k2eg-python:
    build: 
      context: .
      dockerfile: Dockerfile
    working_dir: /opt/app
    command: 
        - /bin/bash
        - -c
        - |
          wait
          python tools/init-test-topics.py
          sleep 30
          pytest -o log_cli=true -o log_cli_level=DEBUG
    environment:
      K2EG_PYTHON_ENABLE_KAFKA_DEBUG_LOG: true
      WAIT_HOSTS: kafka:9092

  epics_pva:
    build:
      context: .
      dockerfile: .devcontainer/DockerfileDevContainer.epics
    command: 
        - /bin/bash
        - -c
        - |
          tmux new-session -d "source /opt/epics-var.sh; softIocPVA -d /db/softioc.db"
          tail -f /dev/null
    volumes:
      - tests/epics-test.db:/db/softioc.db
  k2eg:
    image: ghcr.io/slaclab/k2eg/ubuntu:latest
    pull_policy: always
    command: 
        - /bin/bash
        - -c
        - |
          sleep 10
          k2eg --log-level=debug --cmd-input-topic=cmd-in-topic --sub-server-address=kafka:9092  --sub-group-id=eed-k2eg --pub-server-address=kafka:9092 --metric-enable=true  --scheduler-check-delay-seconds=60 --scheduler-thread-number=1 --monitor-worker-cron-schedule="*/30 * * * * *" --nc-monitor-expiration-timeout=3600 --nc-purge-queue-on-exp-timeout=true
    depends_on: 
      - kafka

  kafka:
    image: docker.io/bitnami/kafka:3.6
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
volumes:
  kafka_data:
    driver: local